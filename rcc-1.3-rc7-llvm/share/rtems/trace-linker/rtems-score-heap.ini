;
; RTEMS Supercore Heap Trace Configurations
;
[rtems-score-heap-all]
trace = _Heap_Get_first_and_last_block, _Heap_Initialize, _Heap_Allocate_aligned_with_boundary
trace = _Heap_Free, _Heap_Walk, _Heap_Iterate, _Heap_Greedy_allocate
trace = _Heap_Greedy_allocate_all_except_largest, _Heap_Greedy_free, _Heap_Get_information
trace = _Heap_Get_free_information, _Heap_Size_of_alloc_area, _Heap_Resize_block
trace = _Heap_Block_allocate

[rtems-score-heap-signatures]
_Heap_Get_first_and_last_block = bool, uintptr_t, uintptr_t, uintptr_t, uintptr_t, Heap_Block**, Heap_Block**
_Heap_Initialize = uintptr_t, Heap_Control*, void*, uintptr_t, uintptr_t
_Heap_Allocate_aligned_with_boundary = void*, Heap_Control*, uintptr_t, uintptr_t, uintptr_t
_Heap_Free = bool, Heap_Control*, void*
_Heap_Walk = bool, Heap_Control*, int, bool
_Heap_Iterate = void, Heap_Control*, Heap_Block_visitor, void*
_Heap_Greedy_allocate = Heap_Block*, Heap_Control*, const uintptr_t*, size_t
_Heap_Greedy_allocate_all_except_largest = Heap_Block*, Heap_Control*, uintptr_t*
_Heap_Greedy_free = void, Heap_Control*, Heap_Block*
_Heap_Get_information = void, Heap_Control*, Heap_Information_block*
_Heap_Get_free_information = void, Heap_Control*, Heap_Information*
_Heap_Size_of_alloc_area = bool, Heap_Control*, void*, uintptr_t*
_Heap_Resize_block = Heap_Resize_status, Heap_Control*, void*, uintptr_t, uintptr_t*, uintptr_t*
_Heap_Block_allocate = Heap_Block*, Heap_Control*, Heap_Block*, uintptr_t, uintptr_t

