;
; RTEMS POSIX Trace Configurations
;
[rtems-posix]
headers = rtems-posix-headers
defines = rtems-posix-defines
signatures = rtems-posix-signatures

[rtems-posix-headers]
header = "#include <pthread.h>"

[rtems-posix-defines]
; Currently empty

[rtems-posix-thread]
trace = pthread_create, pthread_cancel, pthread_detach, pthread_equal, pthread_exit
trace = pthread_join, pthread_kill, pthread_once, pthread_self, pthread_setcancelstate
trace = pthread_setcanceltype, pthread_testcancel, pthread_yield
enable = pthread_create, pthread_cancel, pthread_detach, pthread_equal, pthread_exit
enable = pthread_join, pthread_kill, pthread_once, pthread_self, pthread_setcancelstate
enable = pthread_setcanceltype, pthread_testcancel, pthread_yield

[rtems-posix-mutex]
trace = pthread_mutexattr_destroy, pthread_mutexattr_getprioceiling, pthread_mutexattr_getprotocol
trace = pthread_mutexattr_gettype, pthread_mutexattr_init, pthread_mutexattr_setprioceiling
trace = pthread_mutexattr_setprotocol, pthread_mutexattr_settype, pthread_mutex_destroy
trace = pthread_mutex_init, pthread_mutex_lock, pthread_mutex_timedlock
trace = pthread_mutex_trylock, pthread_mutex_unlock
enable = pthread_mutexattr_destroy, pthread_mutexattr_getprioceiling, pthread_mutexattr_getprotocol
enable = pthread_mutexattr_gettype, pthread_mutexattr_init, pthread_mutexattr_setprioceiling
enable = pthread_mutexattr_setprotocol, pthread_mutexattr_settype, pthread_mutex_destroy
enable = pthread_mutex_init, pthread_mutex_lock, pthread_mutex_timedlock
enable = pthread_mutex_trylock, pthread_mutex_unlock

[rtems-posix-signatures]
;
; Thread
;
pthread_create = int, pthread_t*, const pthread_attr_t*, void*(*)(void *), void*
pthread_cancel = int, pthread_t
pthread_detach = int, pthread_t
pthread_equal = int, pthread_t, pthread_t
pthread_exit = void, void*
pthread_join = int, pthread_t, void**
pthread_kill = int, pthread_t, int
pthread_once = int, pthread_once_t*, void (*)(void)
pthread_self = pthread_t, void
pthread_setcancelstate = int, int, int*
pthread_setcanceltype = int, int, int*
pthread_testcancel = void, void
pthread_yield = void, void
;
; Mutex
;
pthread_mutexattr_destroy = int, pthread_mutexattr_t*
pthread_mutexattr_getprioceiling = int, const pthread_mutexattr_t*, int*
pthread_mutexattr_getprotocol = int, const pthread_mutexattr_t*, int*
pthread_mutexattr_gettype = int, const pthread_mutexattr_t*, int*
pthread_mutexattr_init = int, pthread_mutexattr_t*
pthread_mutexattr_setprioceiling = int, pthread_mutexattr_t*, int
pthread_mutexattr_setprotocol = int, pthread_mutexattr_t*, int
pthread_mutexattr_settype = int, pthread_mutexattr_t*, int
pthread_mutex_destroy = int, pthread_mutex_t*
pthread_mutex_init = int, pthread_mutex_t*, const pthread_mutexattr_t*
pthread_mutex_lock = int, pthread_mutex_t*
pthread_mutex_timedlock = int, pthread_mutex_t*, const struct timespec*
pthread_mutex_trylock = int, pthread_mutex_t*
pthread_mutex_unlock = int, pthread_mutex_t*
