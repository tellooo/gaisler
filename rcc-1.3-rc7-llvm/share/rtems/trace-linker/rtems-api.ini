;
; RTEMS API Trace Configurations
;
[rtems-api]
headers = rtems-api-headers
defines = rtems-api-defines
signatures = rtems-api-signatures

[rtems-api-headers]
header = "#include <rtems.h>"

[rtems-api-defines]
; Currently empty

[rtems-api-task]
trace = rtems_task_create, rtems_task_ident, rtems_task_self, rtems_task_start
trace = rtems_task_restart, rtems_task_delete, rtems_task_suspend, rtems_task_resume
trace = rtems_task_is_suspended, rtems_task_set_priority, rtems_task_wake_after
trace = rtems_task_wake_when, rtems_iterate_over_all_threads,
enable = rtems_task_create, rtems_task_ident, rtems_task_self, rtems_task_start
enable = rtems_task_restart, rtems_task_delete, rtems_task_suspend, rtems_task_resume
enable = rtems_task_is_suspended, rtems_task_set_priority, rtems_task_wake_after
enable = rtems_task_wake_when, rtems_iterate_over_all_threads,

[rtems-api-semaphore]
trace = rtems_semaphore_create, rtems_semaphore_ident, rtems_semaphore_delete
trace = rtems_semaphore_obtain, rtems_semaphore_release, rtems_semaphore_flush
trace = rtems_semaphore_set_priority, rtems_task_mode
enable = rtems_semaphore_create, rtems_semaphore_ident, rtems_semaphore_delete
enable = rtems_semaphore_obtain, rtems_semaphore_release, rtems_semaphore_flush
enable = rtems_semaphore_set_priority, rtems_task_mode

[rtems-api-event]
trace = rtems_event_send, rtems_event_receive
enable = rtems_event_send, rtems_event_receive

[rtems-api-signatures]
rtems_task_create = rtems_status_code, rtems_name, rtems_task_priority, size_t, rtems_mode, rtems_attribute, rtems_id*
rtems_task_ident = rtems_status_code, rtems_name, uint32_t, rtems_id*
rtems_task_self = rtems_id, void
rtems_task_start = rtems_status_code, rtems_id, rtems_task_entry, rtems_task_argument
rtems_task_restart = rtems_status_code, rtems_id, rtems_task_argument
rtems_task_delete = rtems_status_code, rtems_id
rtems_task_suspend = rtems_status_code, rtems_id
rtems_task_resume = rtems_status_code, rtems_id
rtems_task_is_suspended = rtems_status_code, rtems_id
rtems_task_set_priority = rtems_status_code, rtems_id, rtems_task_priority, rtems_task_priority*
rtems_task_mode = rtems_status_code, rtems_mode, rtems_mode, rtems_mode*
rtems_task_wake_after = rtems_status_code, rtems_interval
rtems_task_wake_when = rtems_status_code, rtems_time_of_day*
rtems_iterate_over_all_threads = void, rtems_per_thread_routine

; Semaphore
rtems_semaphore_create = rtems_status_code, rtems_name, uint32_t, rtems_attribute, rtems_task_priority , rtems_id*
rtems_semaphore_ident = rtems_status_code, rtems_name, uint32_t, rtems_id*
rtems_semaphore_delete = rtems_status_code, rtems_id
rtems_semaphore_obtain = rtems_status_code, rtems_id, rtems_option, rtems_interval
rtems_semaphore_release = rtems_status_code, rtems_id
rtems_semaphore_flush = rtems_status_code, rtems_id
rtems_semaphore_set_priority = rtems_status_code, rtems_id, rtems_id, rtems_task_priority, rtems_task_priority*

; Event
rtems_event_send = rtems_status_code, rtems_id, rtems_event_set
rtems_event_receive = rtems_status_code, rtems_event_set, rtems_option, rtems_interval, rtems_event_set*
