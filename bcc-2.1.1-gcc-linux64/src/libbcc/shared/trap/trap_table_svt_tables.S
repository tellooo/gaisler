/*
 * Copyright (c) 2017, Cobham Gaisler AB
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE. 
 */

	.section	".text"
	.global		__bcc_trap_table_svt_bad

/* Default trap handler*/
__bcc_trap_table_svt_bad:
	ta	0x00

/* Trap tables */

#ifndef _SOFT_FLOAT
#define FP_DISABLED_SVT         __bcc_trap_table_svt_bad
#else
#define FP_DISABLED_SVT         __bcc_trap_table_svt_bad
#endif

#ifndef _FLAT
 #define WINDOW_OVERFLOW_SVT    __bcc_trap_window_overflow
 #define WINDOW_UNDERFLOW_SVT   __bcc_trap_window_underflow
 #define FLUSH_WINDOWS_SVT      __bcc_trap_flush_windows
#else
 #define WINDOW_OVERFLOW_SVT    __bcc_trap_table_svt_bad
 #define WINDOW_UNDERFLOW_SVT   __bcc_trap_table_svt_bad
 #define FLUSH_WINDOWS_SVT      __bcc_trap_table_svt_bad
#endif

	.section	".rodata"
	.align 4
	.global		__bcc_trap_table_svt_allbad

__bcc_trap_table_svt_0:
	.long __bcc_trap_reset_svt      ! 00 reset
	.long __bcc_trap_table_svt_bad  ! 01 instruction_access_exception
	.long __bcc_trap_table_svt_bad  ! 02 illegal_instruction
	.long __bcc_trap_table_svt_bad  ! 03 priveleged_instruction
	.long FP_DISABLED_SVT           ! 04 fp_disabled
	.long WINDOW_OVERFLOW_SVT       ! 05 window_overflow
	.long WINDOW_UNDERFLOW_SVT      ! 06 window_underflow
	.long __bcc_trap_table_svt_bad  ! 07 mem_address_not_aligned
	.long __bcc_trap_table_svt_bad  ! 08 fp_exception
	.long __bcc_trap_table_svt_bad  ! 09 data_access_exception
	.long __bcc_trap_table_svt_bad  ! 0A tag_overflow
	.long __bcc_trap_table_svt_bad  ! 0B watchpoint_detected
	.long __bcc_trap_table_svt_bad  ! 0C reserved
	.long __bcc_trap_table_svt_bad  ! 0D reserved
	.long __bcc_trap_table_svt_bad  ! 0E reserved
	.long __bcc_trap_table_svt_bad  ! 0F reserved

/* Second column is from SPARC-ABI */
/* NOTE: "ta 5" can be generated by compiler. */
__bcc_trap_table_svt_8:
	.long __bcc_trap_table_svt_bad  !  0 System calls
	.long __bcc_trap_table_svt_bad  !  1 Breakpoints
	.long __bcc_trap_table_svt_bad  !  2 Division by zero
	.long FLUSH_WINDOWS_SVT         !  3 Flush windows
	.long __bcc_trap_table_svt_bad  !  4 Clean windows
	.long __bcc_trap_table_svt_bad  !  5 Range checking
	.long __bcc_trap_table_svt_bad  !  6 Fix alignment
	.long __bcc_trap_table_svt_bad  !  7 Integer overflow
	.long __bcc_trap_table_svt_bad  !  8 System calls
	.long __bcc_trap_sw_set_pil     !  9 Reserved for the operating system
	.long __bcc_trap_table_svt_bad  ! 10 Reserved for the operating system
	.long __bcc_trap_table_svt_bad  ! 11 Reserved for the operating system
	.long __bcc_trap_table_svt_bad  ! 12 Reserved for the operating system
	.long __bcc_trap_table_svt_bad  ! 13 Reserved for the operating system
	.long __bcc_trap_table_svt_bad  ! 14 Reserved for the operating system
	.long __bcc_trap_table_svt_bad  ! 15 Reserved for the operating system

__bcc_trap_table_svt_2:
__bcc_trap_table_svt_3:
__bcc_trap_table_svt_4:
__bcc_trap_table_svt_5:
__bcc_trap_table_svt_6:
__bcc_trap_table_svt_7:
__bcc_trap_table_svt_9:
__bcc_trap_table_svt_a:
__bcc_trap_table_svt_b:
__bcc_trap_table_svt_c:
__bcc_trap_table_svt_d:
__bcc_trap_table_svt_e:
__bcc_trap_table_svt_f:
__bcc_trap_table_svt_allbad:
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad
	.long __bcc_trap_table_svt_bad

	/* Declare subtable symbols as weak so they can be replaced when linking */
	.weak __bcc_trap_table_svt_0,                         __bcc_trap_table_svt_2, __bcc_trap_table_svt_3
	.weak __bcc_trap_table_svt_4, __bcc_trap_table_svt_5, __bcc_trap_table_svt_6, __bcc_trap_table_svt_7
	.weak __bcc_trap_table_svt_8, __bcc_trap_table_svt_9, __bcc_trap_table_svt_a, __bcc_trap_table_svt_b
	.weak __bcc_trap_table_svt_c, __bcc_trap_table_svt_d, __bcc_trap_table_svt_e, __bcc_trap_table_svt_f

