OUTPUT_FORMAT("elf32-sparc")
ENTRY(__bcc_entry_point)

PROVIDE(__bcc_cfg_skip_clear_bss = 0);

SECTIONS
{
  .text   : {
    CREATE_OBJECT_SYMBOLS
     __text_start = .;
    . = ALIGN(0x1000);
    *(.text.traptable)
    *(.text .text.*)
    . = ALIGN (16);
    *(.eh_frame)
    . = ALIGN (16);
    *(.gnu.linkonce.t*)
     /* C++ constructors */
     ___CTOR_LIST__ = .;
     LONG((___CTOR_END__ - ___CTOR_LIST__) / 4 - 2)
     KEEP(*(SORT(.ctors.*)))
     KEEP(*(.ctors))
     LONG(0)
     ___CTOR_END__ = .;
     ___DTOR_LIST__ = .;
     LONG((___DTOR_END__ - ___DTOR_LIST__) / 4 - 2)
     KEEP(*(SORT(.dtors.*)))
     KEEP(*(.dtors))
     LONG(0)
     ___DTOR_END__ = .;
    *(.gnu.linkonce*)
    KEEP(*(.init))
    KEEP(*(.fini))
    *(.lit)
    *(.shdata)
    . = ALIGN (16);
     __text_end = .;
  }  > REGION_TEXT

  .gcc_except_table   : {
    *(.gcc_except_table.*)
  }  > REGION_RODATA

  .rodata   : {
     __rodata_start  =  .;
    *(.rodata*)
    *(.gnu.linkonce.r*)
     . = ALIGN(0x10);
     __rodata_end = .;
  } > REGION_RODATA

  .ext.data :
  {
    . = ALIGN(0x8);
    __extdata_start = .;
    *(.data.ext)
    . = ALIGN(0x8);
    __extdata_end = .;
  } > REGION_EXTDATA_VMA AT > REGION_EXTDATA_LMA
  __extdata_start_lma = LOADADDR(.ext.data);
  __extdata_size = SIZEOF(.ext.data);

  .data   : {
    . = ALIGN(0x8);
    __data_start = .;
    *(.data .data.* )
    . = ALIGN(0x8);
    __data_end = .;
  }  > REGION_DATA_VMA AT > REGION_DATA_LMA
  __data_start_lma = LOADADDR(.data);
  __data_size = SIZEOF(.data);

  .bss   :
  {
    . = ALIGN(0x8);
    __bss_start = .;
    *(.bss .bss.* )
    *(COMMON)
    . = ALIGN(0x8);
    __bss_end = .;
    __heap_min = .;
  }  > REGION_BSS

  . = ALIGN(0x8);
  .jcr . (NOLOAD) : { *(.jcr) }
  .stab 0 (NOLOAD) :
  {
    [ .stab ]
  }

  .stabstr 0 (NOLOAD) :
  {
    [ .stabstr ]
  }

  .debug           0 : { *(.debug) }
  .line            0 : { *(.line) }
  .debug_srcinfo   0 : { *(.debug_srcinfo) }
  .debug_sfnames   0 : { *(.debug_sfnames) }
  .debug_aranges   0 : { *(.debug_aranges) }
  .debug_pubnames  0 : { *(.debug_pubnames) }
  .debug_info      0 : { *(.debug_info) }
  .debug_abbrev    0 : { *(.debug_abbrev) }
  .debug_line      0 : { *(.debug_line) }
  .debug_frame     0 : { *(.debug_frame) }
  .debug_str       0 : { *(.debug_str) }
  .debug_loc       0 : { *(.debug_loc) }
  .debug_macinfo   0 : { *(.debug_macinfo) }
  .debug_weaknames 0 : { *(.debug_weaknames) }
  .debug_funcnames 0 : { *(.debug_funcnames) }
  .debug_typenames 0 : { *(.debug_typenames) }
  .debug_varnames  0 : { *(.debug_varnames) }
}

